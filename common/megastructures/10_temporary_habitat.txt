# see README.txt for example

temporary_habitat_0 = {
# graphical_culture = { "pirate_01" }
# entity = "station_generic_01_entity"
	construction_entity = "station_generic_01_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	build_time = 480
	prerequisites = { "tech_temporary_habitat" }
	
	resources = {
		category = megastructures
			cost = {
				alloys = 2000
				influence = 50
	  	}
	}
  construction_blocks_others = no

  potential = {
  	OR = {
    	has_technology = tech_temporary_habitat
    }
  }

  possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
  }

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
					is_surveyed = { # prevent leaking habitability information
						who = prev.from
						status = yes
					}
				}#要勘测过
				custom_tooltip = {
			     fail_text = "requires_no_anomaly"
			     NOT = { has_anomaly = yes }
				} #没异常
				custom_tooltip = {
					fail_text = "requires_no_existing_megastructure"
					NOR = {
						solar_system = {
							has_star_flag = ring_world_built
						}
						is_planet_class = pc_ringworld_habitable
						is_planet_class = pc_ringworld_habitable_damaged
						is_planet_class = pc_ringworld_tech
						is_planet_class = pc_ringworld_tech_damaged
						is_planet_class = pc_ringworld_seam
						is_planet_class = pc_ringworld_seam_damaged
						is_planet_class = pc_habitat
					}
				} #不允许各种形式的环世界
				custom_tooltip = {
					fail_text = "requires_no_orbital_station"
					has_orbital_station = no
				} #不允许有空间站
			}

     # root = system
     # from = country     
			ai_weight = {	#AI？？想都别想
				factor = 0
			}
    }
     
     
		on_build_start = {}
		on_build_cancel = {}
     
		on_build_complete = {#建筑完成时
                                               # activate_habitat = fromfrom
		#bypass_type = habitat
		from = { country_event = { id = ev_planet_correct.0  }
		country_event = { id = ev_planet_correct.1 days = 7000 } }

		spawn_planet = {
			class = "pc_habitat"
			location = fromfrom.planet
#			entity = "station_generic_01_entity"
#			entity = "enclave_station_curator_hull_entity"
#			graphical_culture = { "humanoid_01" }			
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 10
			size = 5
			has_ring = no
			

			init_effect = {
#				entity = "enclave_station_curator_hull_entity"
#				set_graphical_culture = mammalian_01
#				graphical_culture = { "humanoid_01" }			
				set_planet_flag = ev_temporary_habitat
				
				if = {
					limit = {
						has_planet_flag = ev_temporary_habitat
					}
					save_event_target_as = ev_temporary_habitat
				}
				
				set_owner = FROM
				
				while = {
					count = 3
					create_pop = {
						species = owner_main_species
					}
				}		
				set_name = "HABITAT_PLANET_NAME"
				set_planet_entity = {
#					entity = "enclave_station_curator_hull_entity"
#   			graphical_culture = { "pirate_01" }
#    			construction_entity = "station_generic_01_entity"
				}

        this = { planet_event = { id = ev_planet_correct.4 days = 7200 } }
        this = { planet_event = { id = ev_planet_correct.6 days = 1 } }

				surveyed = {
					set_surveyed = yes
					surveyor = FROM
				}
				add_modifier = {
					modifier = modifier_temporary_residence
					days = 7200
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
				set_planet_flag = habitat
				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_minerals_1 }
							fromfrom.planet = { has_deposit = d_minerals_2 }
							fromfrom.planet = { has_deposit = d_minerals_3 }
							fromfrom.planet = { has_deposit = d_minerals_4 }
							fromfrom.planet = { has_deposit = d_minerals_5 }
							fromfrom.planet = { has_deposit = d_minerals_6 }
							fromfrom.planet = { has_deposit = d_minerals_7 }
							fromfrom.planet = { has_deposit = d_minerals_8 }
							fromfrom.planet = { has_deposit = d_minerals_9 }
							fromfrom.planet = { has_deposit = d_minerals_10 }
						}
					}
					set_planet_flag = mining_habitat
				}

				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_energy_1 }
							fromfrom.planet = { has_deposit = d_energy_2 }
							fromfrom.planet = { has_deposit = d_energy_3 }
							fromfrom.planet = { has_deposit = d_energy_4 }
							fromfrom.planet = { has_deposit = d_energy_5 }
							fromfrom.planet = { has_deposit = d_energy_6 }
							fromfrom.planet = { has_deposit = d_energy_7 }
							fromfrom.planet = { has_deposit = d_energy_8 }
							fromfrom.planet = { has_deposit = d_energy_9 }
							fromfrom.planet = { has_deposit = d_energy_10 }
						}
					}
					set_planet_flag = energy_habitat
				}

				if = {
					limit = {
						OR = {
							fromfrom.planet = { has_deposit = d_trade_value_1 }
							fromfrom.planet = { has_deposit = d_trade_value_2 }
							fromfrom.planet = { has_deposit = d_trade_value_3 }
							fromfrom.planet = { has_deposit = d_trade_value_4 }
							fromfrom.planet = { has_deposit = d_trade_value_5 }
							fromfrom.planet = { has_deposit = d_trade_value_6 }
							fromfrom.planet = { has_deposit = d_trade_value_7 }
							fromfrom.planet = { has_deposit = d_trade_value_8 }
							fromfrom.planet = { has_deposit = d_trade_value_9 }
							fromfrom.planet = { has_deposit = d_trade_value_10 }
						}
					}
					set_planet_flag = commercial_habitat
				}
			}
		}
		remove_megastructure = fromfrom
		event_target:ev_temporary_habitat = { }
    }
}
