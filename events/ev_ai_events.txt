namespace = ev_ai
#AI刷船
event = {
	id = ev_ai.1
	title = disasters.1.name
	desc = disasters.1.desc
	picture = GFX_evt_archaeological_dig
	show_sound = event_mystic_reveal_light
	location = root
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = { 
				is_country_type = default_ev 
				is_ai = yes
				NOT = { is_country_type = fallen_empire_ev }
				NOT = { has_country_flag = has_ev_to_planets }
				is_at_war = no
			}
			#更新并省出舰队容量
			if = {
				limit = {
					count_owned_ships = { 
						limit = { 
							is_ship_size = homeless_ship
						} 
						count > 5
					}
				}
				random_owned_ship = {
					limit = { 
						OR = {
							is_ship_size = homeless_ship
						}
					}
					destroy_ship = this
				}
			}
			if = {
				limit = {
					count_owned_ships = { 
						limit = { 
							is_ship_size = corvette
						} 
						count > 45
					}
				}
				while = {
					count = 6
					random_owned_ship = {
						limit = { 
							OR = {
								is_ship_size = corvette
							}
						}
						destroy_ship = this
					}
				}
			}
			else_if = {
				limit = {
					count_owned_ships = { 
						limit = { 
							is_ship_size = corvette
						} 
						count > 105
					}
				}
				while = {
					count = 20
					random_owned_ship = {
						limit = { 
							OR = {
								is_ship_size = corvette
							}
						}
						destroy_ship = this
					}
				}
			}
			else_if = {
				limit = {
					count_owned_ships = { 
						limit = { 
							is_ship_size = corvette
						} 
						count > 300
					}
				}
				while = {
					count = 40
					random_owned_ship = {
						limit = { 
							OR = {
								is_ship_size = corvette
							}
						}
						destroy_ship = this
					}
				}
			}
			
			random_owned_fleet = {
				limit = {
					NOT = {
						any_ship = {
							OR = {
								is_ship_class = shipclass_constructor
								is_ship_class = shipclass_science_ship
								is_ship_class = shipclass_colonizer
							}
						}
					}
				}
				save_event_target_as = ev_ai_onwer_amry_ship_location
			}
			
			
			
			random_owned_fleet = {
				limit = {
					NOT = {
						
					}
				}
				save_event_target_as = ev_ai_onwer_amry_ship_location
			}

			if = {
				limit = {
					count_owned_ships = {
						limit = { 
							is_ship_size = homeless_ship_starbase
						} 
						count < 1
					}
				}

				create_fleet = {
					effect = {
						set_owner = prev
						
						create_ship = {
							name = random
							design = NAME_start_homeless_ship_machine_starbase
						}
						set_location = {
							target = event_target:ev_ai_onwer_amry_ship_location
							distance = 20
							angle = random
						}
					}
				}
			}
			
			
			
			create_fleet = {
				effect = {
					set_owner = prev
					
					random_list = {
						1 = {
							while = {
								count = 3
								create_army_transport = {
									ship_name = random
									graphical_culture = prev
									army_type = "ev_assault_army"
								}
							}
						}
						1 = {
							while = {
								count = 2
								create_army_transport = {
									ship_name = random
									graphical_culture = prev
									army_type = "ev_assault_army"
								}
							}
						}
						1 = {
							modifier = {
								add = 2
								mid_game_years_passed > 0
							}
							while = {
								count = 5
								create_army_transport = {
									ship_name = random
									graphical_culture = prev
									army_type = "ev_assault_army"
								}
							}
						}
						1 = {
							modifier = {
								add = 4
								end_game_years_passed > 0
							}
							while = {
								count = 8
								create_army_transport = {
									ship_name = random
									graphical_culture = prev
									army_type = "ev_assault_army"
								}
							}
						}
						
					}
					set_location = {
						target = event_target:ev_ai_onwer_amry_ship_location
						distance = 20
						angle = random
					}
				}
			}
			random_list = {
				1 = {
					#新的判断
					give_ev_ai_bio_homeless_fleet = yes
					give_ev_ai_machine_homeless_fleet = yes
					give_ev_ai_hive_homeless_fleet = yes
				}
				1 = {
					modifier = {
						add = 1
						mid_game_years_passed < 0
					}
					modifier = {
						add = -1
						end_game_years_passed > 10
					}
				}
			}

			
			
			
		}
		
	}
}

#对犯罪舰队强制开边
#event = {
#	id = ev_ai.10
#	hide_window = yes
#	is_triggered_only = yes
#	immediate = {
#		every_country = {
#			limit = { has_civic = civic_ev_criminal_ship }
#			save_event_target_as = default_ev_criminal_country
#		}
#		every_country = {
#			limit = { 
#				NOT = { has_civic = civic_ev_criminal_ship } 
#			}
#			set_closed_borders = {
#				who = event_target:default_ev_criminal_country
#				status = no
#				forced = 20
#			}
#		}
#	}
#}
#
#AI访问虚空
event = {
	id = ev_ai.20
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		mid_game_years_passed > 0
	}
	immediate = {
		every_country = {
			limit = { 
				is_country_type = default_ev 
				is_ai = yes
				has_ascension_perk = ev_ask_the_void
				NOT = { has_country_flag = has_ap_ev_ask_the_void_again }
			}
			set_timed_country_flag = { flag = has_ap_ev_ask_the_void_again days = 900 }
			ev_special_luck_draw_event = yes
			while = {
				count = 5
				ev_luck_draw_event = yes
			}
		}
	}
}


#AI使用开采
event = {
	id = ev_ai.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		
	}
	immediate = {
		every_country = {
			limit = { 
				has_civic = civic_ev_space_miners
				is_ai = yes
				
				NOT = { has_country_flag = has_civic_ev_space_miners_ai }
			}
			set_timed_country_flag = { flag = has_civic_ev_space_miners_ai days = 720 }
			country_event = { id = ev_resource.2050 }
			
		}
	}
}


#AI使用探索新恒星
event = {
	id = ev_ai.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		
	}
	immediate = {
		every_country = {
			limit = { 
				has_civic = civic_ev_space_survey
				is_ai = yes
				NOT = { has_country_flag = has_civic_ev_space_survey }
			}
			set_timed_country_flag = { flag = has_civic_ev_space_survey days = 1200 }
			country_event = { id = ev_resource.2060 }
			
		}
	}
}


#AI使用探索2
event = {
	id = ev_ai.23
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		
	}
	immediate = {
		every_country = {
			limit = { 
				has_ascension_perk = ev_knowledge_is_ours
				is_ai = yes
				NOT = { has_country_flag = has_ev_knowledge_is_ours }
			}
			set_timed_country_flag = { flag = has_ev_knowledge_is_ours days = 900 }
			country_event = { id = ev_resource.2150 }
			
		}
	}
}