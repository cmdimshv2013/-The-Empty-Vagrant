namespace = ev_game_start
event = {
	id = ev_game_start.1
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {

		every_country = {
			limit = { 
				has_civic = civic_empty_vagrant
				NOT = { is_country_type = fallen_empire_ev }
			}
			set_country_type = default_ev
			save_global_event_target_as = default_ev_country
			
		

			#思潮修正
			if = {
				limit = { has_ethic = ethic_fanatic_spiritualist }
				add_modifier = { modifier = ev_government_modifers_1 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_materialist }
				add_modifier = { modifier = ev_government_modifers_2 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_militarist }
				add_modifier = { modifier = ev_government_modifers_3 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_pacifist }
				add_modifier = { modifier = ev_government_modifers_4 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_authoritarian }
				add_modifier = { modifier = ev_government_modifers_5 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_egalitarian }
				add_modifier = { modifier = ev_government_modifers_6 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_xenophile }
				add_modifier = { modifier = ev_government_modifers_7 days = -1 } 
			}

			if = {
				limit = { has_ethic = ethic_fanatic_xenophobe }
				add_modifier = { modifier = ev_government_modifers_8 days = -1 } 
			}

			if = {
				limit = { has_authority = auth_machine_intelligence  }
				add_modifier = { modifier = ev_government_modifers_9 days = -1 } 
			}

			if = {
				limit = { has_authority = auth_hive_mind   }
				add_modifier = { modifier = ev_government_modifers_10 days = -1 } 
			}
			
			#石头人补正
			if = {
				limit = { 
					local_human_species_class = LITHOID   
					NOR = {
						has_authority = auth_hive_mind
					}
				}
				add_modifier = { modifier = ev_government_modifers_lithoid days = -1 } 
			}
			else_if = {
				limit = { 
					local_human_species_class = LITHOID   
					has_authority = auth_hive_mind
				}
				add_modifier = { modifier = ev_government_modifers_lithoid_hive_mind days = -1 } 
			}
			
			if = {
				limit = {
					NOR = {
						has_authority = auth_machine_intelligence
						has_authority = auth_hive_mind
						has_origin = origin_ev_exiles
					}
				}
				#维持度系统
				set_variable = {
					which = ev_maintenance_value
					value = 49.8
				}
				begin_event_chain = {
					event_chain = "ev_maintenance_chain"
					target = ROOT
				}
				maintenance_change_var = yes
			}
			#宇宙漂流起源
			else_if = {
				limit = {
					has_origin = origin_ev_exiles
				}
				set_variable = {
					which = ev_maintenance_value
					value = 25
				}
				maintenance_change_var = yes
			}
			else = {
				set_variable = {
					which = ev_maintenance_value
					value = 55
				}
			}

			#给政体加上修正
			if = {
				limit = {
					NOR = {
						has_authority = auth_machine_intelligence
						has_authority = auth_hive_mind
					}
				}
				if = {
					limit = {
						NOR = {
							has_authority = auth_ev_imperial
							has_authority = auth_imperial
							has_authority = auth_corporate
						}
					}
					add_modifier = { modifier = ev_government_auth_modifers_1 days = -1 } 
				}
				if = {
					limit = {
						OR = {
							has_authority = auth_imperial
						}
					}
					add_modifier = { modifier = ev_government_auth_modifers_2 days = -1 } 
				}
				if = {
					limit = {
						OR = {
							has_authority = auth_ev_imperial
						}
					}
					add_modifier = { modifier = ev_government_auth_modifers_3 days = -1 } 
				}
			}
			
			#设定海外投资回报默认利率
			set_country_flag = ev_investment_interest_low
			
			
			set_variable = {
				which = ev_investment_interest_value
				value = 0.6
			} 
		
			
			#通货膨胀
			#set_variable = {
			#	which = ev_inflation_value
			#	value = 1
			#}
			
			if = {
				limit = {
					NOR = {
						has_authority = auth_machine_intelligence
						has_authority = auth_hive_mind
					}
				}
				#inflation_change_var = yes
				#remove_ev_inflation_buff = yes
				#give_ev_inflation_buff = yes
				
			}
			
			
			
			
			#特质
			#give_technology = { message = no tech = tech_ev_genetic_trait }
			give_ev_traits_buff = yes
			modify_species = {
				species = this
				add_trait = trait_vagrant
			}
			
			#资源
			add_resource = {
				minerals = 300
				energy = 300	
				food = 400
				alloys = 400
				consumer_goods = 150
				influence = 75
				manpower = 100
			}
			if = {
				limit = { 
					has_authority = auth_machine_intelligence  
					NOT = { local_human_species_class = LITHOID }
				}
				add_resource = {
					minerals = -150
					energy = -150
					food = -400
					consumer_goods = -150
					manpower = -100
				}
			}
			else_if = {
				limit = { 
					has_authority = auth_hive_mind  
					NOT = { local_human_species_class = LITHOID }
				}
				add_resource = {
					minerals = -150
					energy = -150
					food = -100
					consumer_goods = -150
					manpower = -100
				}
			}
			else_if = {
				limit = { local_human_species_class = LITHOID  }
				add_resource = {
					food = -400
				}
			}
			
			if = {
				limit = { has_civic = civic_ev_temporary_habitat  }
				add_resource = {
					alloys = 400
				}
			}
			

			#开始科技
			give_technology = { message = no tech = tech_homeless_ship }
			
			#
			give_technology = { message = no tech = tech_homeless_production_resources_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_minerals_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_energy_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_food_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_alloys_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1 }
			give_technology = { message = no tech = tech_homeless_production_resources_manpower_1 }
			give_technology = { message = no tech = tech_homeless_space_research_base_1 }
			
			give_technology = { message = no tech = tech_homeless_production_resources_food_1_machine }
			
			give_technology = { message = no tech = tech_homeless_production_food_energy_resources_1 }
 			give_technology = { message = no tech = tech_homeless_space_research_base_1_machine }
 			give_technology = { message = no tech = tech_homeless_production_resources_1_machine }
 			give_technology = { message = no tech = tech_homeless_production_resources_1_hive_mind }
			give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_machine }
			give_technology = { message = no tech = tech_homeless_production_resources_energy_1_machine }
			
			give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_machine }
			
			give_technology = { message = no tech = tech_homeless_space_research_base_1_lithoid }
 			give_technology = { message = no tech = tech_homeless_production_resources_1_lithoid }
 			
 	        
			give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_lithoid }
			give_technology = { message = no tech = tech_homeless_production_resources_energy_1_lithoid }
			give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1_lithoid }
			give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_lithoid }
			give_technology = { message = no tech = tech_homeless_production_resources_manpower_1_lithoid }
			
			give_technology = { message = no tech = tech_homeless_production_resources_food_1_machine }

			

			
			if = {
				limit = { 
					OR = {
						has_civic = civic_ev_temporary_habitat
					}
				}
				give_technology = { message = no tech = tech_temporary_habitat }
			}

			if = {
				limit = { 
					OR = {
						has_civic = civic_ev_ship_build_ship
					}
				}
				give_technology = { message = no tech = tech_ship_part_homeless_produce_build_ship_1 }
			}
			
			#if = {
			#	limit = { 
			#		NOR = {
			#			has_authority = auth_machine_intelligence
			#			has_authority = auth_hive_mind
			#			local_human_species_class = LITHOID
			#		}
			#	}
			#	give_technology = { message = no tech = tech_homeless_production_resources_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_food_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_manpower_1 }
			#	give_technology = { message = no tech = tech_homeless_space_research_base_1 }
			#}
			#
			#if = {
			#	limit = { 
			#		AND = {
			#			has_authority = auth_hive_mind
			#			NOT = { local_human_species_class = LITHOID }
			#		}
			#	}
			#	give_technology = { message = no tech = tech_homeless_production_resources_food_1_machine }
			#	
			#}
 			#
 			#if = {
			#	limit = { 
			#		AND = {
			#			OR = {
			#				has_authority = auth_machine_intelligence
			#				has_authority = auth_hive_mind
			#			}
			#			NOT = { local_human_species_class = LITHOID }
			#		}
			#	}
			#	give_technology = { message = no tech = tech_homeless_production_food_energy_resources_1 }
 			#	give_technology = { message = no tech = tech_homeless_space_research_base_1_machine }
 			#	give_technology = { message = no tech = tech_homeless_production_resources_1_machine }
 			#	#give_technology = { message = no tech = tech_homeless_production_resources_1_hive_mind }
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_machine }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1_machine }
			#	
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_machine }
			#}
			#
			#
			#
 			#if = {
			#	limit = { 
			#		local_human_species_class = LITHOID
			#	}
			#	
 			#	give_technology = { message = no tech = tech_homeless_space_research_base_1_lithoid }
 			#	give_technology = { message = no tech = tech_homeless_production_resources_1_lithoid }
 			#	
 	        #
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_manpower_1_lithoid }
			#}
			#if = {
			#	limit = { 
			#		NOR = {
			#			has_authority = auth_oligarchic
			#			has_authority = auth_dictatorial
			#			has_authority = auth_democratic
			#			has_authority = auth_imperial
			#			has_authority = auth_corporate
			#		}
			#	}
			#	give_technology = { message = no tech = tech_homeless_space_research_base_1_lithoid }
 			#	give_technology = { message = no tech = tech_homeless_production_resources_1_lithoid }
 			#	
 	        #
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_lithoid }
			#	give_technology = { message = no tech = tech_homeless_production_resources_manpower_1_lithoid }
			#	
			#	give_technology = { message = no tech = tech_homeless_production_food_energy_resources_1 }
 			#	give_technology = { message = no tech = tech_homeless_space_research_base_1_machine }
 			#	give_technology = { message = no tech = tech_homeless_production_resources_1_machine }
 			#	#give_technology = { message = no tech = tech_homeless_production_resources_1_hive_mind }
 	        #
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1_machine }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1_machine }
			#	
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1_machine }
			#	
			#	give_technology = { message = no tech = tech_homeless_production_resources_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_minerals_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_energy_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_food_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_alloys_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_consumer_goods_1 }
			#	give_technology = { message = no tech = tech_homeless_production_resources_manpower_1 }
			#	give_technology = { message = no tech = tech_homeless_space_research_base_1 }
			#	
			#	give_technology = { message = no tech = tech_homeless_production_resources_food_1_machine }
			#}
			give_technology = { message = no tech = tech_homeless_section_templates_1 }
			
			
			
			#初始领袖
			create_leader = {
				class = admiral
				name = random
				skill = 2
				traits = {
					trait = leader_trait_gale_speed
					trait = leader_trait_trickster
				}
			}
			
			
			#开始建筑
			#开局的星球
			if = { 
				limit = { 
					#is_ai = no 
					NOR = { 
						has_origin = origin_ev_both_choosen 
						#has_civic = civic_ev_meg_homeless_ship_strat
						has_origin = origin_ev_meg_homeless_ship_strat
					}
					NOR = { 
						is_country_type = fallen_empire_ev 
						is_country_type = fallen_empire 
					}
				}
				capital_scope = {
					save_event_target_as = ev_capital_scope
				#	every_owned_pop = { kill_pop = yes }			
				#	destroy_colony = yes
				#	random_list = {
				#		1 = { change_pc = pc_barren_cold }
				#		1 = { change_pc = pc_barren }
				#	}
				#	random_list = {
				#		1 = { set_deposit = d_minerals_8 }
				#		1 = { set_deposit = d_minerals_7 }
				#		1 = { set_deposit = d_minerals_6 }
				#		1 = { set_deposit = d_minerals_9 }
				#	}
				#change_pc = pc_habitat
				#set_planet_size = 6
				#ev_habitats_bulid = yes
				#while = {
				#	count = 21
				#	random_owned_pop = { kill_pop = yes }
				#}
				#if = {
				#	limit = { owner = { has_authority = auth_corporate } }
				#	while = {
				#		count = 3
				#		random_owned_pop = { kill_pop = yes }
				#	}
				#}
				#remove_building = building_research_lab_1
				#remove_building = building_foundry_1
				#remove_building = building_factory_1
				#remove_building = building_capital
				#add_building = building_hab_capital 
				
					solar_system = {
						spawn_planet = {
							class = "pc_habitat"
							location = prevprev.capital_scope
							orbit_location = yes
							orbit_angle_offset = 65
							orbit_distance_offset = 45#9.899
							size = 6
							has_ring = no
							init_effect = {	
							
								set_planet_flag = flag_ev_capital_scope_habitat
								save_event_target_as = ev_capital_scope_habitat
								create_ambient_object = {
									type = "medium_debris_01_object"
									location = event_target:ev_capital_scope_habitat
								}
								last_created_ambient_object = {
									set_location = {
										target = event_target:ev_capital_scope_habitat
										distance = 4.9
										angle = 90
									}
								}
								create_ambient_object = {
									type = "medium_debris_01_object"
									location = event_target:ev_capital_scope_habitat
								}
								last_created_ambient_object = {
									set_location = {
										target = event_target:ev_capital_scope_habitat
										distance = 0.8
										angle = 90
									}
								}
								create_ambient_object = {
									type = "medium_debris_01_object"
									location = event_target:ev_capital_scope_habitat
								}
								last_created_ambient_object = {
									set_location = {
										target = event_target:ev_capital_scope_habitat
										distance = -3.3
										angle = 90
									}
								}
								create_ambient_object = {
									type = "medium_debris_01_object"
									location = event_target:ev_capital_scope_habitat
								}
								last_created_ambient_object = {
									set_location = {
										target = event_target:ev_capital_scope_habitat
										distance = -7.5
										angle = 90
									}
								}
								set_planet_flag = mining_habitat
								set_name = "NAME_EV_HABITAT_PLANET"
								set_planet_entity = {
									entity = "OAK_planet_entity" #"caravaneer_cargoship_01_section_entity_ev_planet" #"orbital_habitat_entity"
									#graphical_culture = fromfrom
								}
								#surveyed = {
								#	set_surveyed = yes
								#	surveyor = prevprevprev
								#}
								set_owner = prevprevprev
								#while = {
								#	count = 4
								#	create_pop = {
								#		species = prevprevprev.owner_main_species
								#	}
								#}	
								while = {
									count = 4
										create_pop = {
										species = prevprevprev.owner_species
									}
								}
								
								set_capital = yes

								prevprevprev = {
									if = {
										limit = {
											num_species > 1
										}
										every_owned_pop = {
											limit = {
												always = yes
											}
											resettle_pop = { pop = this planet = owner.capital_scope }	
										}
										capital_scope = {
											#every_owned_pop  = {
											#		limit = {
											#			is_same_species = owner_main_species
											#		}
											#		kill_pop = yes
											#	}
											#}
											add_district = district_hab_housing
											#add_district = district_ev_hab_industrial_area
										}
									}
								}
								
								

								
								#set_all_comms_surveyed = yes
								#clear_blockers = yes
								if = {
									limit = {
										prevprevprevprev = { has_ascension_perk = ap_voidborn }
										NOT = { has_modifier = master_builders_habitats }
									}
									add_modifier = {
										modifier = master_builders_habitats
										days = -1
									}
								}
								if = {
									limit = {
										prevprevprevprev = { 
											OR = {
												has_authority = auth_hive_mind 
												has_authority = auth_machine_intelligence
											}
												
										}
									}
									add_district = district_ev_hab_industrial_area
								}
								set_planet_flag = megastructure
								set_planet_flag = habitat
							}
						}
						
						#开局的恒星基地
						create_starbase = {
							size = starbase_starhold
							owner = prevprev
							#module = shipyard
							#building = crew_quarters
							effect = {
								set_starbase_module = {
									slot = 0
									module = shipyard
								}
								set_starbase_module = {
									slot = 1
									module = anchorage_ev
								}
								set_starbase_module = {
									slot = 2
									module = anchorage_ev
								}
								set_starbase_module = {
									slot = 3
									module = trading_hub
								}
								set_starbase_building = {
									slot = 1
									building = crew_quarters
								}
								
							}
							
						}
					}
				}
			}	
			else_if = {
				limit = { 
					NOR = { 
						is_country_type = fallen_empire_ev 
						is_country_type = fallen_empire 
					}
					NOR = { 
						has_origin = origin_ev_both_choosen
						#has_civic = civic_ev_meg_homeless_ship_strat 
						has_origin = origin_ev_meg_homeless_ship_strat
					}
					is_ai = yes
				}
				capital_scope = {
					
					solar_system = {
						spawn_planet = {
							class = "pc_habitat"
							location = prev
							orbit_location = yes
							orbit_angle_offset = 65
							orbit_distance_offset = 45#9.899
							size = 6
							has_ring = no
							init_effect = {	
								set_owner = prevprevprev
								set_capital = yes
								while = {
									count = 6
									create_pop = {
										species = owner_main_species
									}
								}
								set_name = "NAME_EV_HABITAT_PLANET"
								set_planet_entity = {
									entity = "OAK_planet_entity" #"caravaneer_cargoship_01_section_entity_ev_planet" #"orbital_habitat_entity"
									#graphical_culture = fromfrom
								}
							}
						}
						create_starbase = {
							size = starbase_starhold
							owner = prevprev
							module = shipyard
							building = crew_quarters
							effect = {
								set_starbase_module = {
									slot = 1
									module = anchorage_ev
								}
								set_starbase_module = {
									slot = 2
									module = anchorage_ev
								}
								set_starbase_module = {
									slot = 3
									module = trading_hub
								}
								set_starbase_module = {
									slot = 4
									module = anchorage_ev
								}
							}
						}
					}
				}
			}


			#巨型家园舰开局
			else_if = {
				limit = {
					#has_civic = civic_ev_meg_homeless_ship_strat
					has_origin = origin_ev_meg_homeless_ship_strat
				}
				
				every_owned_ship = { destroy_ship = this }
				every_owned_leader = {
					limit = {
						NOT = { leader_class = ruler }
					}
					kill_leader = { show_notification = no }
				}
				#预见者
				create_leader = {
					class = admiral
					skill = 5
					traits = {
						trait = trait_admiral_ev_event_produces_1
					}
				}
				last_created_leader = {
					add_ruler_trait = trait_ruler_ev_event_produces_1
				}
				assign_leader = last_created_leader
				

				create_fleet = {
					effect = {
						set_owner = prev
						while = {
							count = 8 #14#14
							create_ship = {
								name = random
								design = "NAME_hate_homeless_ship_1"
							}
						}
						#assign_leader = last_created_leader
						set_fleet_stance = passive
						set_location = prev.capital_star
						save_global_event_target_as = hate_homeless_ship
					}
				}
				

				#巨型家园舰
				create_fleet = {
					effect = {
						set_owner = prev
						
						while = {
							count = 1 #14#14
							create_ship = {
								name = random
								design = "NAME_meg_homeless_ship_1"
								#design = "NAME_Great_Space_Organism_EV"
								#random_existing_design = corvette
								#design = "NAME_event_wandering_planet_ship"
							}
						}
						
						#assign_leader = last_created_leader
						set_fleet_stance = passive
						set_location = event_target:hate_homeless_ship
						#set_location = prev.capital_star
					}
				}

				while = {
					count = 2
					create_fleet = {
						effect = {
							set_owner = prev
							create_ship = {
								name = random
								random_existing_design = science
							}
							set_location = prev.capital_star
						}
					}
				}
				capital_scope = {
					every_owned_pop = { kill_pop = yes }
					destroy_colony = yes
					#random_list = {
					#	1 = { change_pc = pc_barren_cold }
					#	1 = { change_pc = pc_barren }
					#}
					#random_list = {
					#	1 = { set_deposit = d_minerals_8 }
					#	1 = { set_deposit = d_minerals_7 }
					#	1 = { set_deposit = d_minerals_6 }
					#	1 = { set_deposit = d_minerals_9 }
					#}
				}
				#add_resource = {
				#	energy = 2000
				#	minerals = 2000
				#}
			}

			#create_leader = {
			#	class = admiral
			#	skill = 5
			#	traits = {
			#		trait = trait_admiral_ev_event_produces_1
			#	}
			#}
			#last_created_leader = {
			#	add_ruler_trait = trait_ruler_ev_event_produces_1
			#}
			#初始进攻舰队
			if = {
				limit = {
					#NOT = { has_civic = civic_ev_meg_homeless_ship_strat }
					NOT = {
						has_origin = origin_ev_meg_homeless_ship_strat
					}
				}
				create_fleet = {
					effect = {
						set_owner = prev
						
						while = {
							count = 14 #14#14
							create_ship = {
								name = random
								#design = "NAME_meg_homeless_ship_1"
								#design = "NAME_Great_Space_Organism_EV"
								random_existing_design = corvette
								#design = "NAME_event_wandering_planet_ship"
							}
						}
						#assign_leader = last_created_leader
						set_fleet_stance = passive
						set_location = prev.capital_star
					}
				}
			}
			
			
			
			#你要的清算
			if = {
				limit = { 
					OR = {
						has_civic = civic_ev_god_elect
					}
				}
				country_event = {
					id = utopia.3320
					days = 18000 random = 1800
				}
			}

			#AI的叛乱与获取倍率
			if = {
				limit = { 
					is_ai = yes
				}
				set_country_flag = ev_ship_rebel_difficult_2X

				set_variable = {
					which = base_steal_ev
					value = 2
				}
				set_variable = {
					which = base_survey_resource_ev
					value = 2
				}
				set_variable = {
					which = base_trade_fleet_ev
					value = 2
				}
			}
			#热闹的银河系
			if = {
				limit = {
					OR = {
						#has_civic = civic_ev_late_start
						has_origin = origin_ev_late_start
					}
					
				}
				country_event = {
					id = ev_game_start.2 days = 1
				}
				random_system = {
					limit = {
						always = yes
					}
					spawn_system = {
						initializer = marauder_1_1
					}
					spawn_system = {
						initializer = marauder_1_2
					}
				}
				random_country = {
					limit = {
						is_country_type = dormant_marauders
					}
					save_global_event_target_as = ev_copy_tech_target
				}
			}
			
			#

			#set_variable = {
			#	which = num_pops_all
			#	value = 0
			#}
			#save_event_target_as = ev_pop_num_target
			#every_pop = {
			#	limit = {
			#		always = yes
			#	}
			#	event_target:ev_pop_num_target = {
			#		change_variable = {
			#			which = num_pops_all
			#			value = 1
			#		}
			#	}
			#	
			#}

			

			#every_country = {
			#	limit = {
			#		is_country_type = default
			#		is_ai = yes
			#	}
			#	set_country_type = default_ev
			#	change_government = {
			#		civics = {
			#			civic = civic_empty_vagrant
			#			civic = random
			#		}
			#	}
			#	set_variable = {
			#		which = ev_maintenance_value
			#		value = 55
			#	}
			#}
			#add_modifier = {
			#	modifier = ev_has_been_expanding_space
			#	days = -1
			#}


			#初始选择封建
			if = {
				limit = {
					has_origin = origin_ev_subjects_owner
				}
				capital_scope = {
					create_fleet = {
						effect = {
							set_owner = prevprev
							save_event_target_as = is_homeless_fleet
							create_ship = {
								name = random
								design = NAME_start_homeless_ship_machine_starbase
							}
						}
					}
					solar_system = {
						random_neighbor_system = {
							save_event_target_as = ev_random_system_target
						}
						random_neighbor_system = {
							limit = {
								NOT = { is_same_value = event_target:ev_random_system_target  }
							}
							save_event_target_as = ev_random_system_target_2
						}
						
					}
					
				}
				while = {
					count = 2
					create_country = {
						type = default_ev
						civics = {
							civic = civic_empty_vagrant
							civic = random
						}
						name = random
						effect = {
							add_trust = {
								amount = 50
								who = prev
							}
							event_target:is_homeless_fleet = {
								set_owner = prev
								set_location = event_target:ev_random_system_target.star
							}

							create_fleet_from_naval_cap = 0.1
							last_created_fleet = {
								set_location = event_target:ev_random_system_target.star
								
							}
							create_fleet_from_naval_cap = 0.1
							last_created_fleet = {
								set_location = event_target:ev_random_system_target_2.star
							}
							while = {
								count = 4
								create_leader = {
									class = scientist
									skill = 1
								}
							}
							create_fleet = {
								effect = {
									set_owner = prev
									create_ship = {
										name = random
										random_existing_design = constructor
									}
									set_location = event_target:ev_random_system_target.star
								}
							}
							create_fleet = {
								effect = {
									set_owner = prev
									create_ship = {
										name = random
										random_existing_design = science
									}
									set_location = event_target:ev_random_system_target_2.star
									assign_leader = last_created_leader
								}
							}
							add_resource = {
								minerals = 500
								energy = 500
								food = 1000
								consumer_goods = 500
								alloys = 1000
							}
							set_subject_of = {
								who = prev
								subject_type = ev_satrapy
							}
							set_variable = {
								which = ev_maintenance_value
								value = 55
							}
							random_list = {
								1 = { set_graphical_culture = humanoid_01 }
								1 = { set_graphical_culture = molluscoid_01 }
								1 = { set_graphical_culture = lithoid_01 }
								1 = { set_graphical_culture = avian_01 }
								1 = { set_graphical_culture = fungoid_01 }
							}
							
						}
					}
				}
				
			}
			
			#对于初始球的处理
			if = {
				limit = {
					NOR = { 
						has_origin = origin_ev_planet_and_big_fleet
						has_origin = origin_ev_default
					}
				}
				event_target:ev_capital_scope = {
									
					every_owned_pop = { kill_pop = yes }
					destroy_colony = yes
					remove_all_buildings = yes
					
					#random_list = {
					#	1 = { change_pc = pc_barren_cold }
					#	1 = { change_pc = pc_barren }
					#}
					#random_list = {
					#	1 = { set_deposit = d_minerals_8 }
					#	1 = { set_deposit = d_minerals_7 }
					#	1 = { set_deposit = d_minerals_6 }
					#	1 = { set_deposit = d_minerals_9 }
					#}
				}
			}
			else_if = {
				limit = {
					has_origin = origin_ev_default
				}
				event_target:ev_capital_scope = {
					every_owned_pop = { kill_pop = yes }
					destroy_colony = yes
					remove_all_buildings = yes
					random_list = {
						1 = { change_pc = pc_barren_cold }
						1 = { change_pc = pc_barren }
						1 = { change_pc = pc_nuked }
						
					}
					random_list = {
						1 = { set_deposit = d_minerals_8 }
						1 = { set_deposit = d_minerals_7 }
						1 = { set_deposit = d_minerals_6 }
						1 = { set_deposit = d_minerals_9 }
					}
					
				}
				#event_target:ev_capital_scope = {
				#	every_owned_pop = { kill_pop = yes }
				#}
			}


			#初始选择星球与舰队联盟
			if = {
				limit = {
					has_origin = origin_ev_planet_and_big_fleet
				}
				add_resource = {
					influence = 200
				}
				event_target:ev_capital_scope = {
					create_country = {
						type = default
						species = prev.owner_species
						effect = {
							copy_ethos_and_authority = prevprev
							change_government = {
								civics = random
							}
							add_resource = {
								minerals = 1000
								energy = 1000
								food = 1000
								consumer_goods = 500
								alloys = 500
								influence = 200
							}
							create_fleet = {
								effect = {
									set_owner = prev
									create_ship = {
										name = random
										random_existing_design = constructor
									}
									set_location = prevprev.star
								}
							}
							create_leader = {
								class = governor
								skill = 1
							}
							while = {
								count = 4
								create_leader = {
									class = scientist
									skill = 1
								}
							}
							create_fleet = {
								effect = {
									set_owner = prev
									create_ship = {
										name = random
										random_existing_design = science
									}
									set_location = prevprev.star
									assign_leader = last_created_leader
								}
							}
							random_list = {
								1 = { set_graphical_culture = humanoid_01 }
								1 = { set_graphical_culture = molluscoid_01 }
								1 = { set_graphical_culture = lithoid_01 }
								1 = { set_graphical_culture = avian_01 }
								1 = { set_graphical_culture = fungoid_01 }
							}
							establish_communications = prevprev
							save_event_target_as = ev_alliance_country
							join_alliance = {
								who = prevprev
								override_requirements = yes
								#override_requirements = yes
							}
							
							add_trust = {
								amount = 100
								who = prevprev
							}
							prevprev = {
								add_trust = {
									amount = 100
									who = prev
								}
							}
						}
					}
					if = {
						limit = {
							num_pops < 10
						}
						while = {
							count = 25
							create_pop = {
								species = prev.owner_species
							}
						}
					}
					
					if = {
						limit = {
							is_planet_class = pc_ringworld_habitable_sh
						}
						while = {
							count = 25
							create_pop = {
								species = prev.owner_species
							}
						}
					}
					#generate_start_buildings_and_districts = yes
					set_owner = last_created_country
					last_created_country = {
						create_fleet_from_naval_cap = 0.1
					}
					
				}
				if = {
					limit = {
						is_ai = yes
					}
					every_owned_starbase = {
						set_owner = last_created_country
					}
				}
				
				#create_fleet = {
				#	effect = {
				#		set_owner = prev
				#		
				#		while = {
				#			count = 14 #14#14
				#			create_ship = {
				#				name = random
				#				random_existing_design = corvette
				#			}
				#		}
				#		set_fleet_stance = passive
				#		set_location = prev.capital_star
				#	}
				#}
				
				#宇宙漂流起源
				if  = {
					limit = {
						has_origin = origin_ev_exiles
					}
					random_system = {
						limit = {
							always = yes
						}
						spawn_system = {
							initializer = marauder_1_1
						}
						spawn_system = {
							initializer = marauder_1_2
						}
					}
					random_country = {
						limit = {
							is_country_type = dormant_marauders
						}
						save_global_event_target_as = ev_copy_tech_target
					}
					copy_techs_from = {
						target = event_target:ev_copy_tech_target
					}
				}
				
			}
			
			
		}
	}
}


#热闹银河系的开局给AI的资源
country_event = {
	id = ev_game_start.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		
	}
	immediate = {
		
		

		#高级的AI开局
		
		every_country = {
			limit = { 
				OR = {
					is_country_type = default
				}
				is_ai = yes
			}
			
			random_owned_pop = {
				limit = { 
					always = yes
				} 
				save_event_target_as = this_pop
			}
			copy_techs_from = {
				target = event_target:ev_copy_tech_target
			}
			add_resource = {
				minerals = 2500
				energy = 2500
				food = 2000
				consumer_goods = 2500
				alloys = 1000
				exotic_gases = 400
				rare_crystals = 400
				volatile_motes = 400
			}
			create_fleet_from_naval_cap = 0.1
			create_fleet_from_naval_cap = 0.1
			while = {
				count = 5
				every_owned_starbase = {
					limit = { 
						always = yes
					} 
					solar_system = {
						while = {
							count = 1
							every_neighbor_system = { 
								limit = { always = yes } 
								create_starbase = {
									size = starbase_outpost
									owner = prevprevprev
								}
								every_system_planet = {
									limit = { 
										habitable_planet = yes
										has_owner = no 
										habitability = { who = event_target:this_pop value > 0.56 }
									}
									set_owner = prevprevprevprev
									generate_start_pops = yes
									generate_start_buildings_and_districts = yes
								} 
							}
						}
					}
				}
			}
		}
		every_country = {
			limit = { 
				is_country_type = default_ev
				is_ai = yes
			}
			
			
			copy_techs_from = {
				target = event_target:ev_copy_tech_target
			}
			
			while = {
				count = 2
				add_resource = {
					minerals = 2500
					energy = 2500
					food = 2000
					consumer_goods = 2500
					alloys = 1000
					exotic_gases = 400
					rare_crystals = 400
					volatile_motes = 400
					manpower = 100
				}
				create_fleet_from_naval_cap = 0.15
				last_created_fleet = {
					set_fleet_bombardment_stance = raiding_ev
				}
				
				every_owned_starbase = {
					limit = { 
						always = yes
					} 
					solar_system = {
						while = {
							count = 1
							every_neighbor_system = { 
								limit = { always = yes } 
								create_starbase = {
									size = starbase_outpost
									owner = prevprevprev
								}
							}
						}
					}
				}
			}
		}
		
	}
}



#默认禁止叛乱事件链，难度为1X
#默认全产无加成
country_event = {
	id = ev_game_start.1999
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		AND = {
			owner = { is_ai = no }
		}
	}
	immediate = {
		owner = { 
			set_country_flag = ev_leader.2000.a.open
			set_country_flag = ban_rebel_event
			set_country_flag = ev_ship_rebel_difficult_1X
			set_country_flag = ev_ship_produce_4X
		 }
	}
}



#开局触发菜单
#叛乱事件难度设定
country_event = {
	id = ev_game_start.2000
	title = ev_game_start.2000.name
	is_triggered_only = yes	
	#开启的提示,1X
	desc = {
		text = ev_game_start.2000.desc.open.1X
		trigger = {
			NOT = { owner = { has_country_flag = ban_rebel_event } }
			owner = { has_country_flag = ev_ship_rebel_difficult_1X }
		}
	}
	#开启的提示,2X
	desc = {
		text = ev_game_start.2000.desc.open.2X
		trigger = {
			NOT = { owner = { has_country_flag = ban_rebel_event } }
			owner = { has_country_flag = ev_ship_rebel_difficult_2X }
		}
	}
	#开启的提示,5X
	desc = {
		text = ev_game_start.2000.desc.open.5X
		trigger = {
			NOT = { owner = { has_country_flag = ban_rebel_event } }
			owner = { has_country_flag = ev_ship_rebel_difficult_5X }
		}
	}
	#开启的提示,10X
	desc = {
		text = ev_game_start.2000.desc.open.10X
		trigger = {
			NOT = { owner = { has_country_flag = ban_rebel_event } }
			owner = { has_country_flag = ev_ship_rebel_difficult_10X }
		}
	}
	#关闭的提示,1X
	desc = {
		text = ev_game_start.2000.desc.ban.1X
		trigger = {
			owner = { has_country_flag = ban_rebel_event }
			owner = { has_country_flag = ev_ship_rebel_difficult_1X }
		}
	}
	#关闭的提示,2X
	desc = {
		text = ev_game_start.2000.desc.ban.2X
		trigger = {
			owner = { has_country_flag = ban_rebel_event }
			owner = { has_country_flag = ev_ship_rebel_difficult_2X }
		}
	}
	#关闭的提示,5X
	desc = {
		text = ev_game_start.2000.desc.ban.5X
		trigger = {
			owner = { has_country_flag = ban_rebel_event }
			owner = { has_country_flag = ev_ship_rebel_difficult_5X }
		}
	}
	#关闭的提示,10X
	desc = {
		text = ev_game_start.2000.desc.ban.10X
		trigger = {
			owner = { has_country_flag = ban_rebel_event }
			owner = { has_country_flag = ev_ship_rebel_difficult_10X }
		}
	}
	picture = GFX_evt_ev_load_5_small
	trigger = {
		AND = {
			owner = { is_ai = no }
			owner = { is_country_type = default_ev }
		}
	}
	immediate = {
#		owner = { 
#			set_country_flag = ev_leader.2000.a.open
#			set_country_flag = ban_rebel_event
#		 }
	}
	
	option = { #不要开启叛乱事件
		name = ev_game_start.2000.a
		custom_tooltip = ev_game_start.2000.a.tooltip
		owner = { 
			set_country_flag = ban_rebel_event
			set_country_flag = ev_leader.2000.a.open
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_leader.2000.a.open
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
				remove_country_flag = ev_leader.2000.b.open
			}
		}
	}
	
	option = { #开启叛乱事件
		name = ev_game_start.2000.b
		custom_tooltip = ev_game_start.2000.b.tooltip
		owner = { 
			remove_country_flag = ban_rebel_event
			set_country_flag = ev_leader.2000.b.open
		}
		ai_chance = {
			factor = 10
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_leader.2000.b.open
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
				remove_country_flag = ev_leader.2000.a.open
			}
		}
	}
	option = { #1X难度
		name = ev_game_start.2000.d
		custom_tooltip = ev_game_start.2000.d.tooltip
		owner = { 
			remove_country_flag = ev_ship_rebel_difficult_2X
			remove_country_flag = ev_ship_rebel_difficult_5X
			remove_country_flag = ev_ship_rebel_difficult_10X
			set_country_flag = ev_ship_rebel_difficult_1X
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_rebel_difficult_1X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
			}
		}
	}
	option = { #2X难度
		name = ev_game_start.2000.e
		custom_tooltip = ev_game_start.2000.e.tooltip
		owner = { 
			remove_country_flag = ev_ship_rebel_difficult_1X
			remove_country_flag = ev_ship_rebel_difficult_5X
			remove_country_flag = ev_ship_rebel_difficult_10X
			set_country_flag = ev_ship_rebel_difficult_2X
		}
		ai_chance = {
			factor = 10
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_rebel_difficult_2X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
			}
		}
	}
	option = { #5X难度
		name = ev_game_start.2000.f
		custom_tooltip = ev_game_start.2000.f.tooltip
		owner = { 
			remove_country_flag = ev_ship_rebel_difficult_1X
			remove_country_flag = ev_ship_rebel_difficult_2X
			remove_country_flag = ev_ship_rebel_difficult_10X
			set_country_flag = ev_ship_rebel_difficult_5X
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_rebel_difficult_5X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
			}
		}
	}
	option = { #10X难度
		name = ev_game_start.2000.g
		custom_tooltip = ev_game_start.2000.g.tooltip
		owner = { 
			remove_country_flag = ev_ship_rebel_difficult_1X
			remove_country_flag = ev_ship_rebel_difficult_2X
			remove_country_flag = ev_ship_rebel_difficult_5X
			set_country_flag = ev_ship_rebel_difficult_10X
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_rebel_difficult_10X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
			}
		}
	}
	option = { #保存，不返会菜单
		name = ev_game_start.2000.c
		custom_tooltip = ev_game_start.2000.c.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2900 }
			}
		}
	}
	option = { #保存，返回菜单
		name = ev_game_start.2000.h
		custom_tooltip = ev_game_start.2000.h.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2200 }
			}
		}
	}
}


#开局触发菜单
#全产和舰队容量加成
country_event = {
	id = ev_game_start.2100
	title = ev_game_start.2100.name
	is_triggered_only = yes	
	#1X最简单，2X较为简单，4X正常，5X困难，10X非常困难
	#开启的提示,1X
	desc = {
		text = ev_game_start.2100.desc.open.1X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_1X }
		}
	}
	#开启的提示,2X
	desc = {
		text = ev_game_start.2100.desc.open.2X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_2X }
		}
	}
	#开启的提示,4X
	desc = {
		text = ev_game_start.2100.desc.open.4X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_4X }
		}
	}
	#开启的提示,5X
	desc = {
		text = ev_game_start.2100.desc.open.5X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_5X }
		}
	}
	#开启的提示,10X
	desc = {
		text = ev_game_start.2100.desc.open.10X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_10X }
		}
	}
	#开启的提示,20X
	desc = {
		text = ev_game_start.2100.desc.open.20X
		trigger = {
			
			owner = { has_country_flag = ev_ship_produce_20X }
		}
	}
	
	picture = GFX_evt_ev_load_5_small
	trigger = {
		AND = {
			owner = { is_ai = no }
			owner = { is_country_type = default_ev }
		}
	}
	immediate = {
		
	}
	
	
	option = { #1X难度
		name = ev_game_start.2100.d
		custom_tooltip = ev_game_start.2100.d.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_2X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_5X
			remove_country_flag = ev_ship_produce_10X
			remove_country_flag = ev_ship_produce_20X
			set_country_flag = ev_ship_produce_1X
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_1X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #2X难度
		name = ev_game_start.2100.e
		custom_tooltip = ev_game_start.2100.e.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_1X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_5X
			remove_country_flag = ev_ship_produce_10X
			remove_country_flag = ev_ship_produce_20X
			set_country_flag = ev_ship_produce_2X 
		}
		ai_chance = {
			factor = 10
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_2X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #4X难度
		name = ev_game_start.2100.f
		custom_tooltip = ev_game_start.2100.f.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_1X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_5X
			remove_country_flag = ev_ship_produce_10X
			remove_country_flag = ev_ship_produce_20X
			set_country_flag = ev_ship_produce_4X 
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_4X
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #5X难度
		name = ev_game_start.2100.g
		custom_tooltip = ev_game_start.2100.g.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_1X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_2X
			remove_country_flag = ev_ship_produce_10X
			remove_country_flag = ev_ship_produce_20X
			set_country_flag = ev_ship_produce_5X 
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_5X 
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #10X难度
		name = ev_game_start.2100.h
		custom_tooltip = ev_game_start.2100.h.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_1X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_2X
			remove_country_flag = ev_ship_produce_5X
			remove_country_flag = ev_ship_produce_20X
			set_country_flag = ev_ship_produce_10X 
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_10X 
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #20X难度
		name = ev_game_start.2100.i
		custom_tooltip = ev_game_start.2100.i.tooltip
		owner = { 
			remove_country_flag = ev_ship_produce_1X
			remove_country_flag = ev_ship_produce_4X
			remove_country_flag = ev_ship_produce_2X
			remove_country_flag = ev_ship_produce_5X
			remove_country_flag = ev_ship_produce_10X
			set_country_flag = ev_ship_produce_20X 
		}
		trigger = {
			owner = {
				NOR = {
					has_country_flag = ev_ship_produce_20X 
				}
			}
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = { #保存，返回菜单
		name = ev_game_start.2100.c
		custom_tooltip = ev_game_start.2100.c.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2200 }
			}
		}
	}
	option = { #结束,并确认
		name = ev_game_start.2100.b
		custom_tooltip = ev_game_start.2100.b.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2900 }
			}
		}
		
	}
}


#开局触发菜单
#掠夺轰炸效率倍数，探索奖励效率倍数，商贸倍数
country_event = {
	id = ev_game_start.2150
	title = ev_game_start.2150.name
	is_triggered_only = yes	
	#1X默认
	
	#开启的提示
	desc = {
		text = ev_game_start.2150.desc
	}
	
	picture = GFX_evt_ev_load_5_small
	trigger = {
		AND = {
			owner = { is_ai = no }
			owner = { is_country_type = default_ev }
		}
	}
	immediate = {
		if = {
			limit = {
				check_variable = {
					which = base_steal_ev
					value <= 0
				}
			}
			set_variable = {
				which = base_steal_ev
				value = 1
			}
		}
		if = {
			limit = {
				check_variable = {
					which = base_survey_resource_ev
					value <= 0
				}
			}
			set_variable = {
				which = base_survey_resource_ev
				value = 1
			}
		}
		if = {
			limit = {
				check_variable = {
					which = base_trade_fleet_ev
					value <= 0
				}
			}
			set_variable = {
				which = base_trade_fleet_ev
				value = 1
			}
		}
		
	}
	option = { #恢复到1倍
		name = ev_game_start.2150.all
		
		set_variable = {
			which = base_steal_ev
			value = 1
		}
		set_variable = {
			which = base_survey_resource_ev
			value = 1
		}
		set_variable = {
			which = base_trade_fleet_ev
			value = 1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	
	option = { #点一次掠夺轰炸增加1倍
		name = ev_game_start.2150.a1
		
		change_variable = {
			which = base_steal_ev
			value = 1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次掠夺轰炸增加5倍
		name = ev_game_start.2150.a5
		
		change_variable = {
			which = base_steal_ev
			value = 5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}

	option = { #点一次掠夺轰炸减少1倍
		name = ev_game_start.2150.a11
		
		change_variable = {
			which = base_steal_ev
			value = -1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次掠夺轰炸减少5倍
		name = ev_game_start.2150.a15
		
		change_variable = {
			which = base_steal_ev
			value = -5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	

	option = { #分割符
		name = ev_game_start.2150.none
		allow = {
			always = no
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}

	option = { #点一次探索奖励增加1倍
		name = ev_game_start.2150.b1
		
		change_variable = {
			which = base_survey_resource_ev
			value = 1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次探索奖励增加5倍
		name = ev_game_start.2150.b5
		
		
		change_variable = {
			which = base_survey_resource_ev
			value = 5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}

	option = { #点一次探索奖励减少1倍
		name = ev_game_start.2150.b11
		
		
		change_variable = {
			which = base_survey_resource_ev
			value = -1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次探索奖励减少5倍
		name = ev_game_start.2150.b15
		
		
		change_variable = {
			which = base_survey_resource_ev
			value = -5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #分割符
		name = ev_game_start.2150.none
		allow = {
			always = no
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}

	option = { #点一次商贸增加1倍
		name = ev_game_start.2150.c1
		
		
		change_variable = {
			which = base_trade_fleet_ev
			value = 1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次商贸增加5倍
		name = ev_game_start.2150.c5
		
		
		change_variable = {
			which = base_trade_fleet_ev
			value = 5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}

	option = { #点一次商贸减少1倍
		name = ev_game_start.2150.c11
		
		
		change_variable = {
			which = base_trade_fleet_ev
			value = -1
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #点一次商贸减少5倍
		name = ev_game_start.2150.c15
		
		
		change_variable = {
			which = base_trade_fleet_ev
			value = -5
		}
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}


	option = { #保存，返回菜单
		name = ev_game_start.2100.c
		custom_tooltip = ev_game_start.2100.c.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2200 }
			}
		}
	}
	option = { #结束,并确认
		name = ev_game_start.2100.b
		custom_tooltip = ev_game_start.2100.b.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2900 }
			}
		}
		
	}
}

#开局难度菜单，包括2000,2100（叛军\全产
country_event = {
	id = ev_game_start.2200
	title = ev_game_start.2200.name
	is_triggered_only = yes	
	#开启的提示,1X
	desc = ev_game_start.2200.desc
	
	
	picture = GFX_evt_ev_load_5_small
	trigger = {
		AND = {
			owner = { is_ai = no }
			owner = { is_country_type = default_ev }
		}
	}
	immediate = {
		
	}
	
	
	option = { #打开叛军难度选项
		name = ev_game_start.2200.a
		custom_tooltip = ev_game_start.2200.a.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2000 }
			}
		}
	}
	option = { #打开全产难度选项
		name = ev_game_start.2200.b
		custom_tooltip = ev_game_start.2200.b.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2100 }
			}
		}
	}
	option = {
		
		name = ev_game_start.2200.d
		custom_tooltip = ev_game_start.2200.d.tooltip		
		hidden_effect = {	
			owner = { 
				country_event = { id = ev_game_start.2150 }
			}
		}
	}
	option = { #谢谢，我不需要，保持默认
		name = ev_game_start.2200.c
		custom_tooltip = ev_game_start.2200.c.tooltip
		hidden_effect = {			
			owner = { 
				country_event = { id = ev_game_start.2900 }
			}
		}
	}
}

#全产加成赋予
country_event = {
	id = ev_game_start.2900
	hide_window = yes
	is_triggered_only = yes
	trigger={
	}
	immediate={
		
		
		if = {
			limit = { has_country_flag = datealive_2 } 
			event_target:ev_capital_scope_habitat = {
				create_pop = {
					species = event_target:DateALiveSpecies_2
				}
			}
		}
		if = {
			limit = { has_country_flag = ev_ship_produce_20X }
			add_modifier = { modifier = ev_ship_produce_20X_modifers days = -1 } 
		}
		if = {
			limit = { has_country_flag = ev_ship_produce_10X }
			add_modifier = { modifier = ev_ship_produce_10X_modifers days = -1 } 
		}
		if = {
			limit = { has_country_flag = ev_ship_produce_5X }
			add_modifier = { modifier = ev_ship_produce_5X_modifers days = -1 } 
		}

		if = {
			limit = { has_country_flag = ev_ship_produce_2X }
			add_modifier = { modifier = ev_ship_produce_2X_modifers days = -1 } 
		}
		if = {
			limit = { has_country_flag = ev_ship_produce_1X }
			add_modifier = { modifier = ev_ship_produce_1X_modifers days = -1 } 
		}
	}
}



#非ai的开局给船事件
country_event={
	id=ev_game_start.3000
	title="ev_game_start.3000.title"
	desc=ev_game_start.3000.desc
	picture=GFX_evt_derelict_interior
	is_triggered_only=yes
	trigger={	
	}
	option={
		name=ev_game_start.3000.a
		remove_country_flag = has_shown_homeless_fix
	}
}

country_event={
	id=ev_game_start.3100
	title="ev_game_start.3100.title"
	desc=ev_game_start.3100.desc
	picture=GFX_evt_ev_load_5_small
	is_triggered_only=yes
	trigger={
		NOT={has_country_flag=ev_deploy_homeless_fleet}
	}
	option={
		name=ev_game_start.3100.a
		hidden_effect={
			owner={country_event={id=ev_game_start.3200}}
			owner={set_country_flag=ev_deploy_homeless_fleet}
		}	
	}
	option={
		name=ev_game_start.3100.b
		
		hidden_effect={
			remove_country_flag=ev_has_start_homeless_fleet
		}
	}
}
country_event={
	id=ev_game_start.3200
	hide_window=yes
	is_triggered_only=yes
	trigger={
	}
	immediate={
		if = {
			limit = { num_pops = 0 }
			random_owned_fleet = {
				save_event_target_as = ev_ship_location
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = homeless_ship
						}
					}
					set_fleet_stance = passive
					set_location = event_target:ev_ship_location
				}
			
			}
		}
		else = {
			create_fleet = {
				effect = {
					set_owner = prev
					while = {
					count = 2
						create_ship = {
							name = random
							random_existing_design = homeless_ship
						}
					}
					set_fleet_stance = passive
					set_location = root.capital_star
				}
			}
		}
	}
}