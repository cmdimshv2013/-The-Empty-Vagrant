namespace = ev_planet_correct
#不会用，暂时放弃
planet_event = {
   id = ev_planet_correct.1
   hide_window = yes
   is_triggered_only = yes
   location = ROOT
   
#   trigger = {
#      owner = {
#         has_valid_civic = "civic_empty_vagrant" 
#      }
#   }
   
   immediate = {
      add_modifier = {
         modifier = modifier_temporary_residence
         days = 7200
      }
      add_modifier = {
         modifier = void_loops
         days = 7200
      }
      add_modifier = {
				modifier = "migrating_forests_2"
				days = -1
			}
   }
}

planet_event = {
  id = ev_planet_correct.2
	title = "ev_planet_correct.2.title"
	desc = "ev_planet_correct.2.desc"
	picture = GFX_evt_molten
	show_sound = event_solar_fusion
	location = ROOT
	
	is_triggered_only = yes
	
	option = {
		name = ev_planet_correct.2.a
		hidden_effect = { 
			planet_event = { id = ev_planet_correct.3 days = 30 } 
		}
	}
	option = {
		name = ev_planet_correct.2.b
		owner = {
			add_resource = {
				influence = 50
			}
		}
	}
}

planet_event = {
  id = ev_planet_correct.3
	title = "ev_planet_correct.4.title"
	desc = "ev_planet_correct.4.desc"
	picture = GFX_evt_molten
	show_sound = event_solar_fusion
	location = ROOT
#	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_fleet = {
			effect = {
				set_owner = fromfromfrom
				while = {
					count = 1 
					create_ship = {
						name = random
						class = colonizer
					}
				}
#				set_fleet_stance = passive  
				set_location = ROOT
			}
		}
		owner = {
			save_global_event_target_as = ev_this_planet_owner
		}
		if = {
			limit = { owner = { is_country_type = default_ev } }
		}
		every_owned_pop = { 
			limit = {				
				always = yes
			}
			event_target:ev_this_planet_owner = {
				add_resource = {
					manpower = 100
				}
			}
		} 
		remove_modifier = modifier_temporary_residence
		this = {
			#change_pc = pc_molten
			destroy_colony = yes
			remove_planet = yes 
		}
	}
	after = {
		clear_global_event_target = ev_this_planet_owner
	}
	option = {
	name = ev_planet_correct.4.a
	  event_target:ev_this_planet_owner = {
	    add_resource = {
	   	 minerals = 2000
			}
		}
	}
}

planet_event = {
	id = ev_planet_correct.4
	title = "ev_planet_correct.4.title"
	desc = "ev_planet_correct.4.desc"
	picture = GFX_evt_molten
	show_sound = event_solar_fusion
	location = ROOT
#	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_modifier = modifier_temporary_residence
		NOT = { has_planet_flag = temporary_residence_to_permanently }
	}
	
	immediate = {
		fromfrom = { country_event = { id = ev_planet_correct.5 days = 3 } }
		create_fleet = {
			effect = {
				set_owner = fromfrom
				while = {
					count = 1 
					create_ship = {
						name = random
						class = colonizer
					}
				}
#				set_fleet_stance = passive  
				set_location = ROOT
			}
		}
		owner = {
			save_global_event_target_as = ev_this_planet_owner
		}
		if = {
			limit = { owner = { is_country_type = default_ev } }
		}
		every_owned_pop = { 
			limit = {				
				always = yes
			}
			event_target:ev_this_planet_owner = {
				add_resource = {
					manpower = 100
				}
			}
		} 
		remove_modifier = modifier_temporary_residence
		this = {
			#change_pc = pc_molten
			destroy_colony = yes
			remove_planet = yes 
		}
	}
	after = {
		clear_global_event_target = ev_this_planet_owner
	}
	option = {
	name = ev_planet_correct.4.a
	  event_target:ev_this_planet_owner = {
	    add_resource = {
	   	 minerals = 2000
			}
		}
	}
}


country_event = {
	id = ev_planet_correct.5
	title = "ev_planet_correct.4.title"
	desc = "ev_planet_correct.4.desc"
	picture = GFX_evt_molten
	show_sound = event_solar_fusion
	location = ROOT
#	hide_window = yes
	is_triggered_only = yes

	immediate = {
		owner = {
			save_global_event_target_as = ev_this_planet_owner
		}
		if = {
			limit = { owner = { is_country_type = default_ev } }
		}
		every_owned_pop = { 
			limit = {				
				always = yes
			}
			event_target:ev_this_planet_owner = {
				add_resource = {
					manpower = 100
				}
			}
		} 
	}
	after = {
		clear_global_event_target = ev_this_planet_owner
	}
	option = {
		name = ev_planet_correct.4.a
	  event_target:ev_this_planet_owner = {
	    add_resource = {
	   	 minerals = 2000

			}
		}
	}
}

#给予临时轨道站初始的人口
planet_event = {
	id = ev_planet_correct.6
	hide_window = yes
	location = ROOT
	is_triggered_only = yes

	immediate = {
		set_owner = from
		while = {
			count = 1
			create_pop = {
				species = owner_main_species
			}
		}
	}
}

#修复巨型家园舰
planet_event = {
	id = ev_planet_correct.10
	title = "ev_planet_correct.4.title"
	desc = "ev_planet_correct.4.desc"
	picture = GFX_evt_molten
	show_sound = event_solar_fusion
	location = ROOT
#	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		
	}
	
	immediate = {
		fromfrom = { country_event = { id = ev_planet_correct.5 days = 3 } }
		create_fleet = {
			effect = {
				set_owner = fromfrom
				while = {
					count = 1 
					create_ship = {
						name = random
						class = colonizer
					}
				}
#				set_fleet_stance = passive  
				set_location = ROOT
			}
		}
		owner = {
			save_global_event_target_as = ev_this_planet_owner
		}
		root = {
			owner = {
				
			}
			from = {
				save_event_target_as = megastructures_homeless_ship_position_1
			}

		}
		create_fleet = {
			effect = {
				set_owner = event_target:ev_this_planet_owner
				
				while = {
					count = 1
					create_ship = {
						name = random
						random_existing_design = corvette
					}
				}
				
				set_fleet_stance = passive
				set_location = event_target:megastructures_homeless_ship_position_1
				save_event_target_as = megastructures_homeless_ship_position_2
			}
		}
		create_fleet = {
			effect = {
				set_owner = event_target:ev_this_planet_owner
				
				while = {
					count = 1
					create_ship = {
						name = random
						random_existing_design = megastructures_homeless_ship
					}
				}
				
				set_fleet_stance = passive
				set_location = event_target:megastructures_homeless_ship_position_2
			}
		}
		if = {
			limit = { owner = { is_country_type = default_ev } }
		}
		every_owned_pop = { 
			limit = {				
				always = yes
			}
			event_target:ev_this_planet_owner = {
				add_resource = {
					manpower = 100
				}
			}
		} 
		remove_modifier = modifier_temporary_residence
		this = {
			#change_pc = pc_molten
			destroy_colony = yes
			remove_planet = yes 
		}
	}
	after = {
		clear_global_event_target = ev_this_planet_owner
	}
	option = {
	name = ev_planet_correct.4.a
		event_target:ev_this_planet_owner = {
			add_resource = {
				minerals = 2000
			}
		}
	}
}



#随机轰炸获得资源
planet_event = {
	id = ev_planet_correct.100
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			#OR = {
			#	is_country_type = default_ev
			#}
		}
		planet_devastation >= 10
		has_orbital_bombardment_stance = steal_ev
		NOT = { has_planet_flag = stealed_ev_planet }
	}
	
	immediate = {
		
	
		if = {
			limit = { 
				from = {
					has_policy_flag = orbital_bombardment_steal_2th
					NOT = { has_ascension_perk = ap_orbital_bombardment_steal }
				}
			} 
			#随机获取2产


			steal_ev_random_2th_resources = yes
			
		}
		else_if = {
			limit = { 
				from = {
					has_policy_flag = orbital_bombardment_steal_2th
					has_ascension_perk = ap_orbital_bombardment_steal
				}
			} 
			
			steal_ev_random_2th_resources = yes
			steal_ev_random_2th_resources = yes
			steal_ev_random_2th_resources = yes
			
		}
		else_if = {
			limit = { 
				from = {
					has_policy_flag = orbital_bombardment_steal_1th
					NOT = { has_ascension_perk = ap_orbital_bombardment_steal }
				}
			} 
		
			steal_ev_random_1th_resources = yes
			
		}
		else_if = {
			limit = { 
				from = {
					has_policy_flag = orbital_bombardment_steal_1th
					has_ascension_perk = ap_orbital_bombardment_steal
				}
			} 
		
			steal_ev_random_1th_resources = yes
			steal_ev_random_1th_resources = yes
			steal_ev_random_1th_resources = yes
			
		}
		else_if = {
			limit = { 
				from = {
					has_policy_flag = orbital_bombardment_steal_all
				}
			} 
			
			steal_ev_random_1th_resources = yes
			steal_ev_random_2th_resources = yes
			steal_ev_random_2th_resources = yes
			steal_ev_random_1th_resources = yes
			
			while = {
				count = base_steal_ev
				from = { add_resource = { alloys = 5 } }
				from = { add_resource = { consumer_goods = 10 } }	
			}
		}
		#石头人轰炸
		if = {
			limit = { 
				from = {
					is_lithoid_empire = yes
				}
			} 
			random_list = {
				4 = { add_deposit = d_lithoid_devastation }
				10 = {}
			}
		}
		
		#掠夺2轰炸
		if = {
			limit = { 
				planet_devastation >= 20
				from = {
					has_ascension_perk = ap_orbital_predatory_planet
				}
			} 
			random_list = {
				1 = { add_deposit = d_ev_predatory_planet }
				3 = {}
			}
		}
		
		set_timed_planet_flag = { flag = stealed_ev_planet days = 30 }
	}
}
#随机轰炸获得社会学
planet_event = {
	id = ev_planet_correct.101
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		from = {
			OR = {
				is_country_type = default_ev
			}
		}
		planet_devastation >= 10		
		has_orbital_bombardment_stance = civilization_test_ev
		NOT = { has_planet_flag = civilization_tested_ev_planet }
	}
	
	immediate = {
		
			steal_ev_random_soc_resources = yes
		
		set_timed_planet_flag = { flag = civilization_tested_ev_planet days = 30 }
	}
}

country_event = {
	id = ev_planet_correct.3000
	hide_window = yes
	#is_triggered_only = yes
	
	mean_time_to_happen = {
		months = 2
	}
	
	trigger = {
		any_owned_planet = { 
			has_orbital_bombardment_stance = steal_ev
			planet_devastation >= 10
		 }
	}
	
	immediate = {
		owner = { lose_steal_ev_2th_random_resources = yes }
	}
}

#
planet_event = {
	id = ev_planet_correct.4000
	title = "ev_planet_correct.4000.title"
	desc = "ev_planet_correct.4000.desc"
	picture = GFX_evt_alien_propaganda
	is_triggered_only = yes
	
	trigger = {
		
	}
	
	immediate = {
		
	}
	option = { #1地块
		name = ev_planet_correct.4000.a
		this = {
			add_deposit = d_ev_deep_excavation
		}
		owner = { add_resource = { alloys = 700 } }
	}
}



country_event = {
	id = ev_planet_correct.5000
	title = "ev_planet_correct.5000.title"
	desc = "ev_planet_correct.5000.desc"
	picture = GFX_evt_alien_propaganda
	is_triggered_only = yes
	
	trigger = {
		
	}
	
	immediate = {
		set_country_flag = has_ev_to_planets
		give_technology = { tech = tech_industrial_farming message = yes}
		give_technology = { tech = tech_power_plant_1 message = yes}
		give_technology = { tech = tech_basic_science_lab_1 message = yes}
		give_technology = { tech = tech_basic_industry message = yes}
		
		
		
	}
	option = {#给修正，保留原来的国策
		name = ev_planet_correct.5000.a
		custom_tooltip = ev_planet_correct.5000.a.tooltip
		hidden_effect = {
			remove_ev_maintenance_buff = yes
		}
		add_research_option = tech_glandular_acclimation
		owner = { add_modifier = { modifier = "empty_vagrant_landed_planet" days = -1 } }
		random_owned_fleet = {
			
#			fromfrom = {
				
				spawn_system = {
					min_distance = 5
					max_distance = 25
					initializer = "ev_ev_land_planets_init_01"
				}
#			}
		}
		random_system_within_border = {
			limit = {
				NOR = {
					
				}
			}			
			spawn_system = {
				min_distance = 5
				max_distance = 25
				initializer = "ev_ev_land_planets_init_01"
			}	
			spawn_system = {
				min_distance = 5
				max_distance = 25
				initializer = "ev_ev_land_planets_init_01"
			}			
		}
		every_planet = {
			limit = { has_planet_flag = ev_spawned_gaia_planet }				
			set_owner = ROOT
			while = {
				count = 15
					create_pop = {
					species = owner_main_species
				}					
			}
			add_building = building_capital
			remove_building = building_colony_shelter
		}
	}
	option = {#不给修正，设置为正常国家的国策，不留舰队
		name = ev_planet_correct.5000.b
		custom_tooltip = ev_planet_correct.5000.b.tooltip
		if = { 
			limit = {
				has_ethic = ethic_fanatic_egalitarian 
			}
			shift_ethic = ethic_authoritarian
		}
		
		set_country_type = default
		set_country_flag = ban_ev_bulid_homeless
		add_research_option = tech_glandular_acclimation
		add_research_option = tech_cruisers
		hidden_effect = {
			remove_ev_maintenance_buff = yes
		}
		clear_global_event_target	= default_ev_country
		give_technology = { tech = tech_corvettes message = yes}
	
		#设置国策
		if = {
			limit = {
				NOR = {
					has_authority = auth_hive_mind 
					has_authority = auth_machine_intelligence 
					has_authority = auth_democratic
					has_authority = auth_oligarchic
					has_authority = auth_dictatorial
					has_authority = auth_imperial
				}
			}
			add_monthly_resource_mult = {
				resource = influence
				value = 30
				min = 400
				max = 1000
			}
			add_modifier = { modifier = "empty_vagrant_landed_planet" days = -1 }
		}
		else = {
			
			change_government = {
				civics = {
					civic = random
				} 
			}
			
		}
		add_monthly_resource_mult = {
			resource = influence
			value = 30
			min = 400
			max = 1000
		}

		#else_if = {
		#	limit = {
		#		has_technology = tech_galactic_administration
		#		has_technology = tech_wahl_system
		#		NOT = { has_authority = auth_hive_mind }
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_meritocracy
		#			civic = civic_byzantine_bureaucracy
		#			civic = civic_efficient_bureaucracy
		#			civic = civic_mining_guilds					
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		has_technology = tech_galactic_administration
		#		has_technology = tech_wahl_system
		#		has_authority = auth_hive_mind
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_hive_subspace_ephapse
		#			civic = civic_hive_ascetic
		#			civic = civic_hive_divided_attention
		#			civic = civic_hive_natural_neural_network
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		has_technology = tech_galactic_administration
		#		has_technology = tech_wahl_system
		#		NOT = { has_authority = auth_hive_mind }
		#		has_authority = auth_machine_intelligence
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_machine_rockbreakers
		#			civic = civic_machine_built_to_last
		#			civic = civic_machine_introspective
		#			civic = civic_machine_replication
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		OR = {
		#			has_technology = tech_galactic_administration
		#			has_technology = tech_wahl_system
		#		}
		#		NOT = { has_authority = auth_hive_mind }
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_meritocracy
		#			civic = civic_byzantine_bureaucracy
		#			civic = civic_mining_guilds
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		OR = {
		#			has_technology = tech_galactic_administration
		#			has_technology = tech_wahl_system
		#		}
		#		has_authority = auth_hive_mind
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_hive_subspace_ephapse
		#			civic = civic_hive_ascetic
		#			civic = civic_hive_divided_attention
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		OR = {
		#			has_technology = tech_galactic_administration
		#			has_technology = tech_wahl_system
		#		}
		#		NOT = { has_authority = auth_hive_mind }
		#		has_authority = auth_machine_intelligence
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_machine_rockbreakers
		#			civic = civic_machine_built_to_last
		#			civic = civic_machine_introspective
		#		}
		#	}
		#}
		#
		#else_if = {
		#	limit = {
		#		NOT = { has_authority = auth_hive_mind }
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_byzantine_bureaucracy
		#			civic = civic_mining_guilds					
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		NOR = {
		#			has_technology = tech_galactic_administration
		#			has_technology = tech_wahl_system
		#		}
		#		has_authority = auth_hive_mind
		#		NOT = { has_authority = auth_machine_intelligence }
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_hive_ascetic
		#			civic = civic_hive_subspace_ephapse
		#		}
		#	}
		#}
		#else_if = {
		#	limit = {
		#		NOR = {
		#			has_technology = tech_galactic_administration
		#			has_technology = tech_wahl_system
		#		}
		#		NOT = { has_authority = auth_hive_mind }
		#		has_authority = auth_machine_intelligence
		#	}
		#	change_government = {
		#		authority = auth_oligarchic
		#		civics = {
		#			civic = civic_machine_rockbreakers
		#			civic = civic_machine_built_to_last
		#		}
		#	}
		#}
		#给资源
		every_owned_ship = {
			limit = { 
				OR = {
					is_ship_size = homeless_ship
				}
			}
			ROOT = {
				add_monthly_resource_mult = {
					resource = minerals
					value = 24
					min = 200
					max = 15000
				}
				add_monthly_resource_mult = {
					resource = energy
					value = 24
					min = 200
					max = 15000
				}
				add_monthly_resource_mult = {
					resource = food
					value = 24
					min = 200
					max = 15000
				}
				add_monthly_resource_mult = {
					resource = alloys 
					value = 24
					min = 100
					max = 5000
				}
				add_monthly_resource_mult = {
					resource = consumer_goods
					value = 24
					min = 100
					max = 7500
				}
				add_monthly_resource_mult = {
					resource = unity
					value = 24
					min = 100
					max = 6000
				}
				add_monthly_resource_mult = {
					resource = exotic_gases
					value = 24
					min = 100
					max = 4000
				}
				add_monthly_resource_mult = {
					resource = volatile_motes
					value = 24
					min = 100
					max = 4000
				}
				add_monthly_resource_mult = {
					resource = rare_crystals
					value = 24
					min = 100
					max = 4000
				}
				
			}
		}
		
		#生成星系
		random_owned_fleet = {
			save_event_target_as = ev_common_ship_location
#			fromfrom = {
				spawn_system = {
					min_distance = 5
					max_distance = 25
					initializer = "ev_ev_land_planets_init_01"
				}
#			}
		}		
		random_system_within_border = {
			limit = {
				NOR = {
					
				}
			}			
			spawn_system = {
				min_distance = 5
				max_distance = 25
				initializer = "ev_ev_land_planets_init_01"
			}		
			spawn_system = {
				min_distance = 5
				max_distance = 25
				initializer = "ev_ev_land_planets_init_01"
			}		
		}
		
		#舰队
		every_owned_ship = {
			limit = { 
				OR = {
					is_ship_size = homeless_ship
					is_ship_size = escort_ship
					is_ship_size = battle_ark
					is_ship_size = Salvation_Ark
					is_ship_size = voidseeker
					is_ship_size = war_stronghold
				}
			}
			fleet = {
				destroy_fleet = this
			}
		}
#		every_owned_fleet = { 
#			destroy_fleet = this 
#		}	
		create_fleet = {
			effect = {
				set_owner = prev
    
				while = {
				count = 1
					create_ship = {
						name = random
						design = "NAME_titan_ev_01"
					}
				}	
				set_fleet_stance = passive  
				set_location = prev.capital_star
			}
		}
		create_fleet_from_naval_cap = 0.25
		set_location = {
			target = event_target:ev_common_ship_location
			distance = 0
			angle = random
		}
		
		every_planet = {
			limit = { has_planet_flag = ev_spawned_gaia_planet }				
			set_owner = ROOT
			add_modifier = { modifier = empty_vagrant_gaia_planet days = -1 } 
			add_building = building_research_lab_2
			add_building = building_research_lab_2
			add_building = building_research_lab_2
			add_building = building_foundry_2
			add_building = building_foundry_2
			add_building = building_holo_theatres
			add_district = district_city
			add_district = district_city
			add_district = district_mining
			add_building = building_ev_unkown_chemists
			add_building = building_capital
			remove_building = building_colony_shelter
			
			while = {
				count = 43
					create_pop = {
					species = owner_main_species
				}					
			}
		}
		every_planet = {
			limit = { has_planet_flag = ev_spawned_gaia_planet_moon }				
			set_owner = ROOT
			add_modifier = { modifier = empty_vagrant_gaia_planet days = -1 } 
			add_building = building_refinery
			add_building = building_refinery
			add_building = building_chemical_plant
			add_building = building_chemical_plant
			add_building = building_holo_theatres
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_city
			add_district = district_generator
			add_district = district_generator
			add_district = district_farming
			add_district = district_farming
			add_district = district_farming
			add_district = district_mining
			add_building = building_capital
			remove_building = building_colony_shelter
			
			
			while = {
				count = 25
					create_pop = {
					species = owner_main_species
				}					
			}
		}
		
			
		every_owned_pop = {
			limit = {
			}
			add_modifier = { modifier = ev_pop_landing days = 7200 }
		}
		
	}
}




#######
#犯罪企业袭击星球事件
planet_event = {
	id = ev_planet_correct.6000
	title = crime.101.name
	desc = crime.101.desc
	picture = GFX_evt_derelict_interior
	show_sound = event_ground_battle
	location = root

	trigger = {
		has_owner = yes
		has_building = building_criminal_boss_office
		any_pop = { has_job = enforcer }
		any_pop = { has_job = criminal_ev }
	}

	mean_time_to_happen = {
		months = 60
	}

	immediate = {
		save_global_event_target_as = has_building_criminal_boss_planet
		random_owned_pop = {
			limit = { has_job = enforcer }
			kill_pop = yes
		}
		
		random_owned_pop = { kill_pop = yes }
		event_target:default_ev_country = {
			if = {
				limit = {
					has_civic = civic_ev_criminal_ship
				}
				country_event = { id = ev_maintenance.300 days = 1 }
			}
		}
	}
	
	option = {
		name = crime.200.a
		custom_tooltip = crime.101.tooltip
	}
}


#采集矿产资源事件链
ship_event = {
	id = ev_planet_correct.7000
	hide_window = yes
	is_triggered_only = yes
#	mean_time_to_happen = {
#		months = 80
#	}

	trigger = {
		owner = { has_policy_flag = ev_destructive_mining }
#		from = {
#			OR = {
#				has_deposit_for = shipclass_mining_station
#				has_mining_station = yes
#			}
#		}
	}

#		exists = controller
#		controller = {
#			OR = {
#				is_country_type = default_ev
#				is_country_type = default
#			}
#			has_policy_flag = ev_destructive_mining
#		}

	immediate = {
		if = {
			limit = {
				owner = {
					OR = {
						is_country_type = default_ev
						is_country_type = default
					}
					has_policy_flag = ev_destructive_mining
				}
			}
			from = { add_modifier = { modifier = "ev_destructive_mining_buff" days = -1 } }
			from = { 
				planet_event = { id = ev_planet_correct.7001 days = 1800 } 
				set_timed_planet_flag = { flag = has_mining_station days = 1800 }
			}
			owner = {#提示信息
				country_event = { id = ev_planet_correct.7010 days = 1800 }
			}
		}	
		else = {}	
	}
}

planet_event = {
	id = ev_planet_correct.7001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		save_global_event_target_as = has_destructive_mining_planet
		clear_deposits = yes
		remove_modifier = "ev_destructive_mining_buff"
		mining_station = {
			dismantle = yes
		}	
		
	}
}

country_event = {
	id = ev_planet_correct.7010
	title = "ev_planet_correct.7010.title"
	desc = "ev_planet_correct.7010.desc"
	picture = GFX_evt_mining_station
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = already_knows_destructive_mining_over }
	}
	immediate = {
		
	}
	
	after = {
		clear_global_event_target = has_destructive_mining_planet
	}
	
	option = {
		name = ev_planet_correct.7010.a
	}
	option = {#不再提醒
		name = ev_planet_correct.7010.b
		set_country_flag = already_knows_destructive_mining_over
	}
}	
#你被清算了
country_event = {
	id = ev_planet_correct.7100
	hide_window = yes

	mean_time_to_happen = {
		months = 1
	}
	trigger = {
		has_civic = civic_ev_god_elect
		has_country_flag = end_of_the_cycle_reckoning
	}
	immediate = {
		if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_origin = origin_ev_both_choosen
				has_civic = civic_ev_ship_build_ship
				has_civic = civic_ev_temporary_habitat
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					
					civic = civic_ev_ship_build_ship
					civic = civic_ev_temporary_habitat
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_civic = civic_ev_ship_build_ship
				has_origin = origin_ev_both_choosen
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_ship_build_ship
					
					civic = civic_ev_industrial_production
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_civic = civic_ev_temporary_habitat
				has_origin = origin_ev_both_choosen
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_temporary_habitat
					
					civic = civic_ev_industrial_production
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_civic = civic_ev_temporary_habitat
				has_civic = civic_ev_ship_build_ship
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_temporary_habitat
					civic = civic_ev_ship_build_ship
					civic = civic_ev_industrial_production
				}
			}
		}

		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_origin = origin_ev_both_choosen
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					
					civic = civic_ev_homeless_ship
					civic = civic_ev_industrial_production
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
				has_civic = civic_ev_ship_build_ship
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_ship_build_ship
					civic = civic_ev_homeless_ship
					civic = civic_ev_industrial_production
				}
			}
		}
		else_if = {
			limit = {
				has_technology = tech_galactic_administration
				has_technology = tech_wahl_system
				has_civic = civic_ev_temporary_habitat
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_temporary_habitat
					civic = civic_ev_homeless_ship
					civic = civic_ev_industrial_production
				}
			}
		}
		else_if = {
			limit = {
				has_technology = tech_galactic_administration
				has_technology = tech_wahl_system
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_homeless_ship
					civic = civic_ev_industrial_production
					civic = civic_ev_maintenance_add
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_technology = tech_galactic_administration
					has_technology = tech_wahl_system
				}	
			}
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_homeless_ship
					civic = civic_ev_industrial_production
				}
			}
		}
		else = {
			change_government = {
				civics = {
					civic = civic_empty_vagrant
					civic = civic_ev_industrial_production
				}
			}
		}
	}
}	